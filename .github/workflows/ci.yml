name: CI
on:
  push:
  workflow_dispatch:
    inputs:
      trigger:
        description: Type m to trigger manual jobs
        required: false
        default: ''
env:
  JAVA_VERSION: '8'
  NODE_VERSION: '19.7.0'
jobs:
  maven-axon-conference-test:
    if: github.event.inputs.trigger == ''
      || !startsWith(github.event.inputs.trigger, 'm')
      || !startsWith(github.event.inputs.trigger, 'M')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: java-cache
        with:
          path: |
            ./.n*
            ./.m2
            ./.gradle
            ~/.m2/repository
            !~/.m2/repository/daggerok
            !~/.m2/repository/com/github/daggerok
          key: ${{ runner.os }}-${{ hashFiles('**/pom.xml', '**/*.gradle', '**/gradle.properties') }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: sudo apt install -yq httpie
      - run: bash mvnw -f axon-conference
      - run: java -jar ./axon-conference/target/*.jar &
      - run: npm_config_yes=true npx wait-port 8080
      - run: http -I :8080/conference name=ololo
      - run: http -I :8080/conference
  gradle-axon-conference-test:
    if: github.event.inputs.trigger == ''
      || !startsWith(github.event.inputs.trigger, 'm')
      || !startsWith(github.event.inputs.trigger, 'M')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: java-cache
        with:
          path: |
            ./.n*
            ./.m2
            ./.gradle
            ~/.m2/repository
            !~/.m2/repository/daggerok
            !~/.m2/repository/com/github/daggerok
          key: ${{ runner.os }}-${{ hashFiles('**/pom.xml', '**/*.gradle', '**/gradle.properties') }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: sudo apt install -yq httpie
      - run: bash gradlew -p ./axon-conference
      - run: bash ./axon-conference/build/libs/*.jar &
      - run: npm_config_yes=true npx wait-port 8080
      - run: http -I :8080/conference name=ololo
      - run: http -I :8080/conference
  maven-java-ee-test:
    if: github.event.inputs.trigger == ''
      || !startsWith(github.event.inputs.trigger, 'm')
      || !startsWith(github.event.inputs.trigger, 'M')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: java-cache
        with:
          path: |
            ./.n*
            ./.m2
            ./.gradle
            ~/.m2/repository
            !~/.m2/repository/daggerok
            !~/.m2/repository/com/github/daggerok
          key: ${{ runner.os }}-${{ hashFiles('**/pom.xml', '**/*.gradle', '**/gradle.properties') }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: sudo apt install -yq httpie
      - run: bash mvnw -f java-ee
      - run: docker compose -f ./java-ee/docker-compose-maven.yaml build
      - run: docker compose -f ./java-ee/docker-compose-maven.yaml up -d
      - run: npm_config_yes=true npx wait-port 8080
      - run: sleep 40
      - run: http -I post :8080/app/facebook/create postId=post1
      - run: http -I put http://localhost:8080/app/facebook/post1/like
      - run: http -I put http://localhost:8080/app/facebook/post1/dislike
      - run: http -I put http://localhost:8080/app/facebook/post1/like
      - run: http -I put http://localhost:8080/app/facebook/post1/like
      - run: http -I :8080/app/posts
      - run: http -I :8080/app/posts/post1/events
  gradle-java-ee-test:
    if: github.event.inputs.trigger == ''
      || !startsWith(github.event.inputs.trigger, 'm')
      || !startsWith(github.event.inputs.trigger, 'M')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: java-cache
        with:
          path: |
            ./.n*
            ./.m2
            ./.gradle
            ~/.m2/repository
            !~/.m2/repository/daggerok
            !~/.m2/repository/com/github/daggerok
          key: ${{ runner.os }}-${{ hashFiles('**/pom.xml', '**/*.gradle', '**/gradle.properties') }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: sudo apt install -yq httpie
      - run: bash gradlew -p java-ee
      - run: bash gradlew -p java-ee composeUp
      - run: npm_config_yes=true npx wait-port 8080
      - run: sleep 20
      - run: http -I post :8080/app/facebook/create postId=post2
      - run: http -I put http://localhost:8080/app/facebook/post2/like
      - run: http -I put http://localhost:8080/app/facebook/post2/dislike
      - run: http -I put http://localhost:8080/app/facebook/post2/like
      - run: http -I put http://localhost:8080/app/facebook/post2/like
      - run: http -I :8080/app/posts
      - run: http -I :8080/app/posts/post2/events
